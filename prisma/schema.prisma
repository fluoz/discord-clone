generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String    @id @default(uuid())
  image          String?
  name           String?
  email          String?   @unique
  emailVerified  DateTime?
  hashedPassword String?
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
  account        Account[]
  channels       Channel[]
  members        Member[]
  servers        Server[]
}

model Account {
  id                String  @id @default(cuid()) @map("_id")
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Server {
  id         String    @id @default(uuid())
  name       String
  imageUrl   String
  inviteCode String
  userId     String
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  channels   Channel[]
  members    Member[]
  user       User      @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
}

model Member {
  id        String     @id @default(uuid())
  role      MemberRole @default(GUEST)
  userId    String
  serverId  String
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  server    Server     @relation(fields: [serverId], references: [id], onDelete: Cascade)
  user      User       @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
  @@index([serverId])
}

model Channel {
  id        String      @id @default(uuid())
  name      String
  type      ChannelType @default(TEXT)
  userId    String
  serverId  String
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  server    Server      @relation(fields: [serverId], references: [id], onDelete: Cascade)
  user      User        @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
  @@index([serverId])
}

enum MemberRole {
  ADMIN
  MODERATOR
  GUEST
}

enum ChannelType {
  TEXT
  AUDIO
  VIDEO
}
